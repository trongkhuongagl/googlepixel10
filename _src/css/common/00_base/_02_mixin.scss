@charset "UTF-8";
@use "_01_config" as *;

// Mixin
@mixin mq($size) {
  @if $size == 'small' {
    @media screen and (max-width: #{ $break-small }px) {
      @content;
    }
  }
  @else if $size == 'medium' {
    @media screen and (max-width: #{ $break-medium }px) {
      @content;
    }
  }
  @else if $size == 'medium2' {
    @media print, screen and (min-width: 768px) and (max-width: 1439px) {
      @content;
    }
  }
  @else if $size == 'large' {
    @media screen and (max-width: #{ $break-large }px) {
      @content;
    }
  }
}

@mixin mq-gt($size) {
  @if $size == 'small' {
    @media screen and (min-width: #{ $break-small + 1 }px) {
      @content;
    }
  }
  @else if $size == 'medium' {
    @media print, screen and (min-width: #{ $break-medium + 1 }px) {
      @content;
    }
  }
  @else if $size == 'large' {
    @media print, screen and (min-width: #{ $break-large + 1 }px) {
      @content;
    }
  }
}

@mixin fz-m($size) {
  font-size: calc($size / 1439 * 100vw);
}

@mixin fz-s($size) {
  font-size: calc($size / 393 * 100vw);
}

@function vw-l($value) {
	@return calc($value / 1440 * 100vw);
}

@function vw-m($value) {
	@return calc($value / 1439 * 100vw);
}

@function vw-s($value) {
	@return calc($value / 393 * 100vw);
}

@function vw-min($px, $design-width: 1440) {
  $vw: ($px / $design-width) * 100;
  @return min(#{$vw}vw, #{$px}px);
}

@mixin hover {
  transition: opacity .2s;
  &:hover {
    opacity: 0.7;
    text-decoration: none;
  }
}

@mixin hover-ico {
  .e-ico {
    &::before {
      opacity: 0;
    }
    &::after {
      opacity: 1;
    }
  }
}

@mixin ico {
  position: relative;
  display: inline-block;
  &::before,
  &::after {
    position: absolute;
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    transition: opacity .2s;
  }
  &::after {
    opacity: 0;
  }
  &.is-disabled {
    pointer-events: none;
    opacity: 0.4;
  }
}